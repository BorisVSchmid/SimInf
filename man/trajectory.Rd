% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimInf_model.R
\name{trajectory}
\alias{trajectory}
\title{Extract data from a simulated trajectory}
\usage{
trajectory(model, compartments = NULL, i = NULL, as.is = FALSE)
}
\arguments{
\item{model}{the \code{model} to extract the result from.}

\item{compartments}{specify the compartments to extract the number
of individuals from. Default (\code{compartments=NULL}) is to
extract data from all compartments in the model.}

\item{i}{indices specifying the nodes to include when extracting
data. Default is \code{NULL}, which includes all nodes.}

\item{as.is}{the default (\code{as.is = FALSE}) is to generate a
\code{data.frame} with one row per node and time-step with the
number of individuals in each compartment. Using \code{as.is =
TRUE} returns the result as a matrix, which is the internal
format (see \sQuote{Details}).}
}
\value{
The number of individuals in each compartment
}
\description{
Extract the number of individuals in each compartment the number
of individuals in each compartment in every node after running a
trajectory with \code{\link{run}}.
}
\details{
Description of the layout of the matrix that is returned if
\code{as.is = TRUE}. \code{U[, j]} contains the number of
individuals in each compartment at \code{tspan[j]}. \code{U[1:Nc,
j]} contains the number of individuals in node 1 at
\code{tspan[j]}. \code{U[(Nc + 1):(2 * Nc), j]} contains the
number of individuals in node 2 at \code{tspan[j]} etc, where
\code{Nc} is the number of compartments in the model. The
dimension of the matrix is \eqn{N_n N_c \times}
\code{length(tspan)} where \eqn{N_n} is the number of nodes.
}
\examples{
## Create an 'SIR' model with 6 nodes and initialize
## it to run over 10 days.
u0 <- data.frame(S = 100:105, I = 1:6, R = rep(0, 6))
model <- SIR(u0 = u0, tspan = 1:10, beta = 0.16, gamma = 0.077)

## Run the model
result <- run(model, threads = 1, seed = 22)

## Extract the number of individuals in each compartment at the
## time-points in tspan.
trajectory(result)

## Extract the number of recovered individuals in the first node
## after each time step in the simulation.
trajectory(result, compartments = "R", i = 1)

## Extract the number of recovered individuals in the first and
## third node after each time step in the simulation.
trajectory(result, compartments = "R", i = c(1, 3))

## Create an 'SISe' model with 6 nodes and initialize
## it to run over 10 days.
u0 <- data.frame(S = 100:105, I = 1:6)
model <- SISe(u0 = u0, tspan = 1:10, phi = rep(0, 6),
    upsilon = 0.02, gamma = 0.1, alpha = 1, epsilon = 1.1e-5,
    beta_t1 = 0.15, beta_t2 = 0.15, beta_t3 = 0.15, beta_t4 = 0.15,
    end_t1 = 91, end_t2 = 182, end_t3 = 273, end_t4 = 365)

## Run the model
result <- run(model, threads = 1, seed = 7)

## Extract the continuous state variable 'V1' in each node at the
## time-points in tspan. In the 'SISe' model, 'V1' represents the
## environmental infectious pressure 'phi'.
trajectory(result, "V1")
}
